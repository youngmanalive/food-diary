{"version":3,"sources":["hooks/useActiveIndex.js","constants/index.js","util/createDiary.js","util/storage.js","hooks/useDiary.js","components/entry.js","components/day.js","components/formModal.js","app.js","util/serviceWorker.js","index.js"],"names":["useActiveIndex","useState","active","set","e","index","prev","DATE_FORMATS","keyifyDay","date","format","parseDayKey","key","moment","formatTitle","formatHeading","isSupported","window","localStorage","setItem","valid","getItem","removeItem","error","isStorageSupported","fetch","diary","JSON","parse","persist","stringify","useDiary","loading","setLoading","entries","setEntries","editId","setEditId","formOpen","setFormOpen","useEffect","storage","useMemo","Object","data","reduce","entry","dayKey","day","title","header","id","createDiary","sort","a","b","localeCompare","formEntry","find","addEntry","newEntry","v4","concat","editEntry","targetIndex","findIndex","newState","slice","removeEntry","filter","Entry","isActive","setActive","store","Fragment","Accordion","Title","onClick","Icon","name","type","className","Button","circular","icon","size","event","stopPropagation","Content","description","split","map","chunk","idx","Day","sorted","values","diff","Header","as","options","keys","breakfast","lunch","dinner","snack","text","value","defaultForm","Date","now","FormModal","form","setForm","onClose","onChange","Modal","open","trigger","floated","Form","onSubmit","Field","selected","showTimeSelect","timeFormat","timeIntervals","maxDate","dateFormat","Select","label","TextArea","rows","color","disabled","content","App","Loader","Container","styled","fluid","Boolean","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a613708b.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useActiveIndex = () => {\n  const [active, set] = useState(null);\n\n  const setActive = (e, { index }) => {\n    set(prev => (prev === index ? null : index));\n  };\n\n  return [active, setActive];\n};\n","export const TYPE = {\n  breakfast: 'breakfast',\n  lunch: 'lunch',\n  dinner: 'dinner',\n  snack: 'snack',\n};\n\nexport const DATE_FORMATS = {\n  keyDate: 'YY.M.D',\n  dayAndTime: 'ddd, MMM D YYYY, h:mm a',\n  time: 'h:mm a',\n  day: 'ddd, MMMM Do',\n  title: 'M/DD',\n};\n","import moment from 'moment';\n\nimport { DATE_FORMATS } from '../constants';\n\nconst keyifyDay = date => date.format(DATE_FORMATS.keyDate);\nconst parseDayKey = key => moment(key, DATE_FORMATS.keyDate);\nconst formatTitle = date => date.format(DATE_FORMATS.title);\nconst formatHeading = date => date.format(DATE_FORMATS.day);\n\nexport const createDiary = (data = []) =>\n  data.reduce((diary, entry) => {\n    const date = moment(entry.date);\n    const dayKey = keyifyDay(date);\n\n    if (!diary[dayKey]) {\n      const day = parseDayKey(dayKey);\n      diary[dayKey] = {\n        title: formatTitle(day),\n        header: formatHeading(day),\n        entries: {},\n      };\n    }\n\n    diary[dayKey].entries[entry.id] = { ...entry, date };\n\n    return diary;\n  }, {});\n","const TEST = 'test';\nconst DIARY = 'diary';\n\nconst isStorageSupported = () => {\n  try {\n    window.localStorage.setItem(TEST, TEST);\n    const valid = window.localStorage.getItem(TEST) === TEST;\n    window.localStorage.removeItem(TEST);\n    return valid;\n  } catch (error) {\n    return false;\n  }\n};\n\nclass Storage {\n  isSupported = isStorageSupported();\n\n  fetch = () => {\n    const diary = this.isSupported && window.localStorage.getItem(DIARY);\n    try {\n      return !!diary ? JSON.parse(diary) : [];\n    } catch (error) {\n      this.persist([]);\n      return [];\n    }\n  };\n\n  persist = diary => {\n    if (this.isSupported) {\n      window.localStorage.setItem(DIARY, JSON.stringify(diary));\n    }\n  };\n}\n\nexport default new Storage();\n","import { useEffect, useState, useMemo } from 'react';\nimport { v4 } from 'uuid';\n\nimport { createDiary } from '../util/createDiary';\nimport storage from '../util/storage';\n\nexport const useDiary = () => {\n  const [loading, setLoading] = useState(true);\n  const [entries, setEntries] = useState([]);\n  const [editId, setEditId] = useState(null);\n  const [formOpen, setFormOpen] = useState(false);\n\n  useEffect(() => {\n    setEntries(storage.fetch());\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (!loading) storage.persist(entries);\n  }, [entries, loading]);\n\n  const diary = useMemo(() => {\n    const diaryEntries = Object.entries(createDiary(entries));\n    return diaryEntries.sort(([a], [b]) => a.localeCompare(b));\n  }, [entries]);\n\n  const formEntry = editId\n    ? entries.find(entry => entry.id === editId)\n    : null;\n\n  const addEntry = data => {\n    setEntries(prev => {\n      const newEntry = { ...data, id: v4() };\n      return prev.concat([newEntry]);\n    });\n  };\n\n  const editEntry = data => {\n    const targetIndex = entries.findIndex(entry => entry.id === data.id);\n    if (targetIndex >= 0) {\n      setEntries(prev => {\n        const newState = prev.slice();\n        newState[targetIndex] = data;\n        return newState;\n      });\n    }\n  }\n\n  const removeEntry = id => {\n    if (id) setEntries(prev => prev.filter(entry => entry.id !== id));\n  };\n\n  return {\n    diary,\n    loading,\n    addEntry,\n    editEntry,\n    removeEntry,\n    setEditId,\n    formEntry,\n    formOpen,\n    setFormOpen,\n  };\n};\n","import React from 'react';\nimport { Icon, Button, Accordion } from 'semantic-ui-react';\n\nimport { DATE_FORMATS } from '../constants';\n\nconst Entry = ({ entry, isActive, setActive, store }) => {\n  const handleDelete = event => {\n    event.stopPropagation();\n    store.removeEntry(entry.id);\n  };\n\n  const handleEdit = event => {\n    event.stopPropagation();\n    store.setEditId(entry.id);\n  }\n\n  return (\n    <React.Fragment>\n      <Accordion.Title active={isActive} index={entry.id} onClick={setActive}>\n        <Icon name=\"dropdown\" />\n        {entry.date.format(DATE_FORMATS.time)} — {entry.type}\n        {isActive && (\n          <div className=\"entryControls\">\n            <Button circular icon=\"pencil\" size=\"mini\" onClick={handleEdit} />\n            <Button circular icon=\"trash\" size=\"mini\" onClick={handleDelete} />\n          </div>\n        )}\n      </Accordion.Title>\n      <Accordion.Content active={isActive}>\n        {entry.description.split('\\n').map((chunk, idx) => (\n          <p key={idx}>{chunk}</p>\n        ))}\n      </Accordion.Content>\n    </React.Fragment>\n  );\n};\n\nexport default Entry;\n","import React from 'react';\nimport { Header, Accordion } from 'semantic-ui-react';\n\nimport { useActiveIndex } from '../hooks/useActiveIndex';\nimport Entry from './entry';\n\nconst Day = ({ data, store }) => {\n  const [active, setActive] = useActiveIndex();\n  const { entries, header } = data;\n\n  const sorted = Object.values(entries).sort((a, b) => a.date.diff(b.date));\n\n  return (\n    <React.Fragment>\n      <Header as=\"h3\">{header}</Header>\n      <Accordion.Accordion>\n        {sorted.map(entry => (\n          <Entry\n            key={entry.id}\n            entry={entry}\n            isActive={active === entry.id}\n            setActive={setActive}\n            store={store}\n          />\n        ))}\n      </Accordion.Accordion>\n    </React.Fragment>\n  );\n};\n\nexport default Day;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\n\nimport { TYPE } from '../constants';\n\nconst options = Object.keys(TYPE).map(type => ({ text: type, value: type }));\n\nconst defaultForm = () => ({\n  type: '',\n  description: '',\n  date: Date.now(),\n});\n\nconst FormModal = ({ store }) => {\n  const [form, setForm] = useState(defaultForm());\n\n  const onClose = () => {\n    store.setEditId(null);\n    setForm(defaultForm());\n    store.setFormOpen(false);\n  };\n\n  const onChange = (event, data) => {\n    const { value, name } = data;\n    setForm(form => ({ ...form, [name]: value }));\n  };\n\n  const onDateChange = date => {\n    onChange(null, { value: date, name: 'date' });\n  };\n\n  const onSubmit = () => {\n    if (store.formEntry) {\n      store.editEntry(form);\n    } else {\n      store.addEntry(form);\n    }\n    onClose();\n  };\n\n  useEffect(() => {\n    if (store.formEntry) {\n      const { id, date, type, description } = store.formEntry;\n      setForm({\n        id,\n        date: new Date(date),\n        type,\n        description,\n      });\n      store.setFormOpen(true);\n    }\n  }, [store]);\n\n  return (\n    <Modal\n      open={store.formOpen}\n      onClose={onClose}\n      trigger={\n        <Button\n          floated=\"right\"\n          circular\n          icon=\"plus\"\n          onClick={() => store.setFormOpen(true)}\n        />\n      }\n    >\n      <Modal.Header>\n        {store.formEntry ? 'Edit' : 'Add'} Diary Entry\n      </Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={onSubmit}>\n          <Form.Field>\n            <label>Date</label>\n            <DatePicker\n              selected={form.date}\n              onChange={onDateChange}\n              showTimeSelect\n              timeFormat=\"hh:mm aa\"\n              timeIntervals={15}\n              maxDate={Date.now()}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n          </Form.Field>\n          <Form.Select\n            label=\"Type\"\n            name=\"type\"\n            options={options}\n            onChange={onChange}\n            value={form.type}\n          />\n          <Form.TextArea\n            label=\"Description\"\n            name=\"description\"\n            rows={10}\n            value={form.description}\n            onChange={onChange}\n          />\n          <Form.Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={!form.type || !form.description}\n            content=\"Submit\"\n          />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default FormModal;\n","import React from 'react';\nimport { Container, Icon, Header, Accordion, Loader } from 'semantic-ui-react';\n\nimport { useActiveIndex } from './hooks/useActiveIndex';\nimport { useDiary } from './hooks/useDiary';\nimport Day from './components/day';\nimport FormModal from './components/formModal';\n\nconst App = () => {\n  const [active, setActive] = useActiveIndex();\n  const store = useDiary();\n\n  if (store.loading) {\n    return <Loader active />;\n  }\n\n  return (\n    <Container>\n      <FormModal store={store} />\n      <Header as=\"h1\">Food Diary</Header>\n      <Accordion styled fluid>\n        {store.diary.map(([day, data]) => (\n          <React.Fragment key={day}>\n            <Accordion.Title\n              active={active === day}\n              index={day}\n              onClick={setActive}\n            >\n              <Icon name=\"dropdown\" />\n              {data.title}\n            </Accordion.Title>\n            <Accordion.Content active={active === day}>\n              <Day data={data} store={store} />\n            </Accordion.Content>\n          </React.Fragment>\n        ))}\n      </Accordion>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport App from './app';\nimport './styles/styles.css';\nimport * as serviceWorker from './util/serviceWorker';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}